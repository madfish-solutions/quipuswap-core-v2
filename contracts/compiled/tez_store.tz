{ parameter
    (or (or (or (pair %ban_baker (key_hash %baker) (nat %ban_period)) (unit %default))
            (or (pair %divest_tez (contract %receiver unit) (nat %amt)) (unit %invest_tez)))
        (or (pair %vote
               (address %voter)
               (key_hash %candidate)
               (bool %execute_voting)
               (nat %votes)
               (nat %current_balance))
            (pair %withdraw_rewards
               (contract %receiver unit)
               (address %user)
               (nat %current_balance)
               (nat %new_balance)))) ;
  storage
    (pair (big_map %users address (pair (option %candidate key_hash) (nat %votes)))
          (big_map %bakers
             key_hash
             (pair (timestamp %ban_start_time) (nat %ban_period) (nat %votes)))
          (big_map %users_rewards address (pair (nat %reward_f) (nat %reward_paid_f)))
          (key_hash %previous_delegated)
          (key_hash %current_delegated)
          (key_hash %next_candidate)
          (address %baker_registry)
          (address %dex_core)
          (nat %pair_id)
          (nat %next_reward)
          (nat %total_reward)
          (nat %reward_paid)
          (nat %reward_per_share)
          (nat %reward_per_block)
          (nat %last_update_level)
          (nat %collecting_period_end)
          (nat %voting_period_end)) ;
  code { PUSH string "406" ;
         PUSH key_hash "tz1ZZZZZZZZZZZZZZZZZZZZZZZZZZZZNkiRg" ;
         PUSH nat 1000000000000000000 ;
         PUSH nat 0 ;
         PUSH nat 0 ;
         PUSH timestamp 0 ;
         PAIR 3 ;
         PUSH nat 0 ;
         PUSH nat 0 ;
         PAIR ;
         LAMBDA
           (pair (contract unit) nat)
           operation
           { UNPAIR ; PUSH mutez 1 ; DIG 2 ; MUL ; UNIT ; TRANSFER_TOKENS } ;
         LAMBDA
           (pair timestamp nat nat)
           bool
           { NOW ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 3 ;
             INT ;
             DIG 2 ;
             CAR ;
             ADD ;
             COMPARE ;
             GT } ;
         DUP 7 ;
         DUP 6 ;
         PAIR ;
         LAMBDA
           (pair (pair nat string)
                 (pair (big_map address (pair (option key_hash) nat))
                       (big_map key_hash (pair timestamp nat nat))
                       (big_map address (pair nat nat))
                       key_hash
                       key_hash
                       key_hash
                       address
                       address
                       nat
                       nat
                       nat
                       nat
                       nat
                       nat
                       nat
                       nat
                       nat))
           (pair (big_map address (pair (option key_hash) nat))
                 (big_map key_hash (pair timestamp nat nat))
                 (big_map address (pair nat nat))
                 key_hash
                 key_hash
                 key_hash
                 address
                 address
                 nat
                 nat
                 nat
                 nat
                 nat
                 nat
                 nat
                 nat
                 nat)
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             DUP ;
             GET 17 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 15 ;
             PUSH string "202" ;
             SWAP ;
             NIL nat ;
             DUP 4 ;
             CONS ;
             VIEW "get_total_supply" (list (pair (nat %request) (nat %total_supply))) ;
             IF_NONE { FAILWITH } { SWAP ; DROP } ;
             PUSH nat 0 ;
             SWAP ;
             ITER { SWAP ;
                    DUP 3 ;
                    DUP 3 ;
                    CAR ;
                    COMPARE ;
                    EQ ;
                    IF { DROP ; CDR } { SWAP ; DROP } } ;
             SWAP ;
             DROP ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GT ;
             IF { SWAP ;
                  DUP ;
                  DUG 2 ;
                  GET 31 ;
                  LEVEL ;
                  COMPARE ;
                  GT ;
                  IF { SWAP ; DUP ; DUG 2 ; GET 31 } { LEVEL } ;
                  DUP 3 ;
                  GET 27 ;
                  DUP 4 ;
                  GET 29 ;
                  DIG 2 ;
                  SUB ;
                  ISNAT ;
                  IF_NONE { DUP 5 ; FAILWITH } {} ;
                  MUL ;
                  DUP 3 ;
                  DUP 3 ;
                  DIG 2 ;
                  EDIV ;
                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                  CAR ;
                  DIG 3 ;
                  GET 25 ;
                  ADD ;
                  UPDATE 25 ;
                  LEVEL ;
                  UPDATE 29 ;
                  DUP ;
                  GET 31 ;
                  LEVEL ;
                  COMPARE ;
                  GT ;
                  IF { PUSH string "204" ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET 15 ;
                       UNIT ;
                       VIEW "get_collecting_period" nat ;
                       IF_NONE { FAILWITH } { SWAP ; DROP } ;
                       PUSH string "205" ;
                       DUP 3 ;
                       GET 15 ;
                       UNIT ;
                       VIEW "get_cycle_duration" nat ;
                       IF_NONE { FAILWITH } { SWAP ; DROP } ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       PUSH nat 1 ;
                       DIG 3 ;
                       DUP 5 ;
                       GET 31 ;
                       LEVEL ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { DUP 8 ; FAILWITH } {} ;
                       EDIV ;
                       IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                       CAR ;
                       ADD ;
                       MUL ;
                       MUL ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       DUP 6 ;
                       DIG 4 ;
                       GET 19 ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                       CAR ;
                       UPDATE 27 ;
                       DUP ;
                       GET 27 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET 31 ;
                       LEVEL ;
                       SUB ;
                       ISNAT ;
                       IF_NONE { DIG 5 ; FAILWITH } { DIG 6 ; DROP } ;
                       MUL ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       DUP 4 ;
                       DIG 3 ;
                       GET 31 ;
                       ADD ;
                       UPDATE 31 ;
                       DUP ;
                       DIG 4 ;
                       DIG 3 ;
                       EDIV ;
                       IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                       CAR ;
                       DIG 2 ;
                       GET 25 ;
                       ADD ;
                       UPDATE 25 ;
                       DUP ;
                       DUG 3 ;
                       DUP ;
                       DUG 4 ;
                       GET 27 ;
                       MUL ;
                       EDIV ;
                       IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                       CAR ;
                       DIG 2 ;
                       GET 21 ;
                       ADD ;
                       UPDATE 21 ;
                       PUSH nat 0 ;
                       UPDATE 19 }
                     { SWAP ; DIG 2 ; DIG 3 ; DROP 3 } }
                { DIG 2 ; DIG 3 ; DROP 3 } } ;
         SWAP ;
         APPLY ;
         DUP 8 ;
         DUP 5 ;
         PAIR ;
         LAMBDA
           (pair (pair (pair nat nat) string)
                 (pair (pair address nat)
                       (pair nat
                             (pair (big_map address (pair (option key_hash) nat))
                                   (big_map key_hash (pair timestamp nat nat))
                                   (big_map address (pair nat nat))
                                   key_hash
                                   key_hash
                                   key_hash
                                   address
                                   address
                                   nat
                                   nat
                                   nat
                                   nat
                                   nat
                                   nat
                                   nat
                                   nat
                                   nat))))
           (pair (big_map address (pair (option key_hash) nat))
                 (big_map key_hash (pair timestamp nat nat))
                 (big_map address (pair nat nat))
                 key_hash
                 key_hash
                 key_hash
                 address
                 address
                 nat
                 nat
                 nat
                 nat
                 nat
                 nat
                 nat
                 nat
                 nat)
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DIG 4 ;
             DUP 3 ;
             GET 5 ;
             DUP 5 ;
             GET ;
             IF_NONE {} { SWAP ; DROP } ;
             DUP 3 ;
             GET 25 ;
             DIG 5 ;
             MUL ;
             SWAP ;
             DUP ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 2 ;
             SUB ;
             ISNAT ;
             IF_NONE { DIG 5 ; FAILWITH } { DIG 6 ; DROP } ;
             DIG 2 ;
             CAR ;
             ADD ;
             UPDATE 1 ;
             DUP 3 ;
             GET 25 ;
             DIG 2 ;
             MUL ;
             UPDATE 2 ;
             SWAP ;
             DUP ;
             GET 5 ;
             DIG 2 ;
             DIG 3 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             UPDATE 5 } ;
         SWAP ;
         APPLY ;
         DIG 9 ;
         UNPAIR ;
         IF_LEFT
           { DIG 2 ;
             DIG 4 ;
             DIG 6 ;
             DIG 8 ;
             DIG 9 ;
             DIG 10 ;
             DROP 6 ;
             IF_LEFT
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     PUSH string "403" ;
                     DUP 3 ;
                     GET 15 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { DROP } { FAILWITH } ;
                     DUG 2 ;
                     DUP ;
                     DUG 3 ;
                     GET 3 ;
                     DUP 3 ;
                     CAR ;
                     GET ;
                     IF_NONE {} { SWAP ; DROP } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     UPDATE 3 ;
                     NOW ;
                     UPDATE 1 ;
                     DIG 2 ;
                     DUP ;
                     GET 3 ;
                     DIG 2 ;
                     DIG 3 ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 3 ;
                     NIL operation ;
                     PAIR }
                   { DIG 3 ;
                     DROP 2 ;
                     DUP ;
                     PUSH mutez 1 ;
                     AMOUNT ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DIG 2 ;
                     GET 19 ;
                     ADD ;
                     UPDATE 19 ;
                     EXEC ;
                     NIL operation ;
                     PAIR } }
               { DIG 2 ;
                 DIG 4 ;
                 DROP 2 ;
                 IF_LEFT
                   { PUSH string "403" ;
                     DUP 3 ;
                     GET 15 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { DROP } { FAILWITH } ;
                     PUSH string "200" ;
                     PUSH mutez 1 ;
                     BALANCE ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP 3 ;
                     CDR ;
                     COMPARE ;
                     LE ;
                     IF { DROP } { FAILWITH } ;
                     SWAP ;
                     NIL operation ;
                     DUP 3 ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     CONS ;
                     PAIR }
                   { DIG 2 ;
                     DROP 2 ;
                     PUSH string "403" ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 15 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { DROP } { FAILWITH } ;
                     NIL operation ;
                     PAIR } } }
           { IF_LEFT
               { DIG 5 ;
                 DIG 6 ;
                 DIG 8 ;
                 DROP 3 ;
                 PUSH string "403" ;
                 DUP 3 ;
                 GET 15 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF { DROP } { FAILWITH } ;
                 SWAP ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 7 ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 8 ;
                 DUP 3 ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 PUSH nat 0 ;
                 NONE key_hash ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 DUP 4 ;
                 CAR ;
                 GET ;
                 IF_NONE {} { SWAP ; DROP } ;
                 DUP ;
                 CAR ;
                 IF_NONE
                   { DIG 6 ; DROP ; SWAP }
                   { DUP 6 ;
                     DUP 4 ;
                     GET 3 ;
                     DUP 3 ;
                     GET ;
                     IF_NONE {} { SWAP ; DROP } ;
                     DUP 3 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 4 ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { DIG 8 ; FAILWITH } { DIG 9 ; DROP } ;
                     DIG 4 ;
                     DUP ;
                     GET 3 ;
                     DIG 3 ;
                     DIG 3 ;
                     UPDATE 4 ;
                     DIG 3 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 3 } ;
                 DUP 5 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 DUP 5 ;
                 GET 3 ;
                 GET ;
                 IF_NONE {} { SWAP ; DROP } ;
                 DUP 4 ;
                 GET 7 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 4 ;
                 ADD ;
                 DUP ;
                 DUG 2 ;
                 UPDATE 4 ;
                 DIG 2 ;
                 DUP ;
                 GET 3 ;
                 DUP 3 ;
                 DUP 7 ;
                 GET 3 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 3 ;
                 DIG 3 ;
                 DUP 5 ;
                 GET 7 ;
                 UPDATE 2 ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 PUSH nat 0 ;
                 DUP 4 ;
                 CDR ;
                 COMPARE ;
                 NEQ ;
                 IF { DIG 2 ; DUP 6 ; GET 3 ; SOME ; UPDATE 1 }
                    { DIG 2 ; NONE key_hash ; UPDATE 1 } ;
                 DUP 6 ;
                 CAR ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 1 ;
                 DUP 6 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 DUP 3 ;
                 GET 9 ;
                 GET ;
                 IF_NONE {} { SWAP ; DROP } ;
                 DUP 7 ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 4 ;
                 GET 11 ;
                 GET ;
                 IF_NONE {} { SWAP ; DROP } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 4 ;
                 DIG 5 ;
                 COMPARE ;
                 GT ;
                 IF { SWAP ;
                      DIG 3 ;
                      DROP 3 ;
                      DUP ;
                      GET 9 ;
                      UPDATE 11 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      GET 3 ;
                      UPDATE 9 }
                    { DUP 3 ;
                      GET 9 ;
                      DUP 6 ;
                      GET 3 ;
                      COMPARE ;
                      NEQ ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      GET 4 ;
                      DIG 5 ;
                      GET 4 ;
                      COMPARE ;
                      GT ;
                      AND ;
                      IF { DROP 2 ; SWAP ; DUP ; DUG 2 ; GET 3 ; UPDATE 11 }
                         { SWAP ;
                           GET 4 ;
                           SWAP ;
                           GET 4 ;
                           COMPARE ;
                           GT ;
                           IF { DUP ; DUP ; DUG 2 ; GET 11 ; UPDATE 9 ; SWAP ; GET 9 ; UPDATE 11 } {} } } ;
                 NIL operation ;
                 DIG 2 ;
                 GET 5 ;
                 DUP 3 ;
                 GET 32 ;
                 LEVEL ;
                 COMPARE ;
                 GE ;
                 AND ;
                 IF { DUP 4 ;
                      DUP 3 ;
                      GET 3 ;
                      DUP 4 ;
                      GET 11 ;
                      GET ;
                      IF_NONE {} { SWAP ; DROP } ;
                      DUP 4 ;
                      SWAP ;
                      EXEC ;
                      IF { SWAP ; DUP 5 ; UPDATE 11 } { SWAP } ;
                      DIG 3 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      GET 3 ;
                      DUP 3 ;
                      GET 9 ;
                      GET ;
                      IF_NONE {} { SWAP ; DROP } ;
                      DIG 3 ;
                      SWAP ;
                      EXEC ;
                      IF { SWAP ;
                           DROP ;
                           NIL operation ;
                           NONE key_hash ;
                           SET_DELEGATE ;
                           CONS ;
                           SWAP ;
                           DUP 3 ;
                           UPDATE 9 ;
                           DIG 2 ;
                           UPDATE 7 ;
                           SWAP ;
                           PAIR }
                         { DIG 2 ;
                           DROP ;
                           DUP ;
                           GET 7 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           GET 9 ;
                           COMPARE ;
                           NEQ ;
                           IF { SWAP ;
                                DROP ;
                                NIL operation ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 9 ;
                                SOME ;
                                SET_DELEGATE ;
                                CONS ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 13 ;
                                DUP 3 ;
                                GET 9 ;
                                PUSH string "201" ;
                                DIG 2 ;
                                CONTRACT %validate key_hash ;
                                IF_NONE { FAILWITH } { SWAP ; DROP } ;
                                PUSH mutez 0 ;
                                DIG 2 ;
                                TRANSFER_TOKENS ;
                                CONS ;
                                SWAP ;
                                DUP ;
                                GET 9 ;
                                UPDATE 7 ;
                                SWAP ;
                                PAIR }
                              { SWAP ; PAIR } } ;
                      DUP ;
                      CDR ;
                      DUP ;
                      PUSH string "203" ;
                      DUP 3 ;
                      GET 15 ;
                      UNIT ;
                      VIEW "get_voting_period" nat ;
                      IF_NONE { FAILWITH } { SWAP ; DROP } ;
                      PUSH string "205" ;
                      DIG 3 ;
                      GET 15 ;
                      UNIT ;
                      VIEW "get_cycle_duration" nat ;
                      IF_NONE { FAILWITH } { SWAP ; DROP } ;
                      MUL ;
                      LEVEL ;
                      ADD ;
                      UPDATE 32 ;
                      SWAP ;
                      CAR ;
                      SWAP ;
                      PAIR }
                    { DIG 2 ; DIG 3 ; DIG 4 ; DROP 3 ; SWAP ; PAIR } ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 PAIR }
               { DIG 4 ;
                 DIG 7 ;
                 DIG 9 ;
                 DROP 3 ;
                 PUSH string "403" ;
                 DUP 3 ;
                 GET 15 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF { DROP } { FAILWITH } ;
                 SWAP ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 6 ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 DUP 3 ;
                 GET 3 ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 DIG 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 DUP 4 ;
                 GET 3 ;
                 GET ;
                 IF_NONE {} { SWAP ; DROP } ;
                 NIL operation ;
                 DUP ;
                 DUP 4 ;
                 DUP 4 ;
                 PAIR ;
                 PAIR ;
                 DUP 7 ;
                 DUP 4 ;
                 CAR ;
                 COMPARE ;
                 GT ;
                 IF { DUP 7 ;
                      DUP 4 ;
                      CAR ;
                      EDIV ;
                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                      CAR ;
                      DUP 4 ;
                      DIG 8 ;
                      DUP 3 ;
                      MUL ;
                      DIG 5 ;
                      CAR ;
                      SUB ;
                      ISNAT ;
                      IF_NONE { DIG 7 ; FAILWITH } { DIG 8 ; DROP } ;
                      UPDATE 1 ;
                      DUP 5 ;
                      DUP 3 ;
                      DIG 6 ;
                      GET 23 ;
                      ADD ;
                      UPDATE 23 ;
                      DIG 4 ;
                      DIG 3 ;
                      DUP 6 ;
                      CAR ;
                      PAIR ;
                      DIG 6 ;
                      SWAP ;
                      EXEC ;
                      CONS ;
                      DUP 4 ;
                      CDR ;
                      DIG 4 ;
                      CAR ;
                      CDR ;
                      DIG 4 ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      CDR ;
                      DIG 3 ;
                      DIG 2 ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      CAR ;
                      PAIR }
                    { SWAP ; DIG 2 ; DIG 3 ; DIG 5 ; DIG 6 ; DIG 7 ; DROP 6 } ;
                 DUP ;
                 CAR ;
                 CDR ;
                 DUP ;
                 GET 5 ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 DIG 4 ;
                 GET 3 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 5 ;
                 SWAP ;
                 CDR ;
                 PAIR } } } ;
  view "get_user_candidate"
       address
       key_hash
       { UNPAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         GET 9 ;
         PUSH nat 0 ;
         NONE key_hash ;
         PAIR ;
         DIG 3 ;
         CAR ;
         DIG 3 ;
         GET ;
         IF_NONE {} { SWAP ; DROP } ;
         CAR ;
         IF_NONE {} { SWAP ; DROP } } ;
  view "get_tez_balance"
       unit
       nat
       { DROP ;
         PUSH mutez 1 ;
         BALANCE ;
         EDIV ;
         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
         CAR } ;
  view "is_banned_baker"
       key_hash
       bool
       { UNPAIR ;
         PUSH nat 0 ;
         PUSH nat 0 ;
         PUSH timestamp 0 ;
         PAIR 3 ;
         DIG 2 ;
         GET 3 ;
         DIG 2 ;
         GET ;
         IF_NONE {} { SWAP ; DROP } ;
         NOW ;
         SWAP ;
         DUP ;
         DUG 2 ;
         GET 3 ;
         INT ;
         DIG 2 ;
         CAR ;
         ADD ;
         COMPARE ;
         GT } }

